// <auto-generated />
using System;
using BSC_0909.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BSC_0909.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250811055533_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BSC_0909.Domain.Entities.CryptoCurrencyEntity", b =>
                {
                    b.Property<string>("ccid")
                        .HasColumnType("text");

                    b.Property<double>("ClosePrice")
                        .HasColumnType("double precision");

                    b.Property<double>("HighPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("LowPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("OpenPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("currencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ccid");

                    b.ToTable("cryptoCurrencyEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
